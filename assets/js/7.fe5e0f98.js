(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{216:function(t,s,a){"use strict";a.r(s);var n=a(0),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),a("h2",{attrs:{id:"介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),a("p",[t._v("虽然数据结构有很多，比如树，图，哈希表，但真正实现它们的还需要落实到具体的基础数据结构，即"),a("strong",[t._v("数组和链表")]),t._v("。之所以说他们是基础的数据结构，是因为它们直接控制物理内存的使用。")]),t._v(" "),a("p",[t._v("数组使用连续的内存空间，来存储一系列同一数据类型的值。如图表示的是数组的"),a("strong",[t._v("每一项都使用一个 byte 存储")]),t._v("的情况。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://tva1.sinaimg.cn/large/007S8ZIlly1gfqvddm3zaj30na0jkjte.jpg",alt:""}})]),t._v(" "),a("p",[t._v("那么为什么数组要存储相同类型的值呢？为什么有的语言（比如 JS）就可以存储不同类型的值呢？")]),t._v(" "),a("p",[t._v("实际上存储相同的类型有两个原因：")]),t._v(" "),a("ol",[a("li",[t._v("相同的类型"),a("strong",[t._v("大小是固定且连续的")]),t._v("(这里指的是基本类型，而不是引用类型，当然引用类型也可以存一个大小固定的指针，而将真实的内容放到别的地方，比如内存堆)，这样数组就可以"),a("strong",[t._v("随机访问")]),t._v("了。试想数组第一项是 4 字节，第二项是 8 字节，第三项是 6 字节，我如何才能随机访问？而如果数组元素的大小都一样，我们就可以用"),a("strong",[t._v("基址 + 偏移量")]),t._v("来定位任意一个元素，其中基值指的是数组的引用地址，如上图就是 1001。 偏移量指的是数组的索引。")]),t._v(" "),a("li",[t._v("强类型语言要求指定数组的类型。")])]),t._v(" "),a("blockquote",[a("p",[t._v("虽然在一些语言，比如 JavaScript 中，数组可以保存不同类型的值。这是因为内部做了处理，这个不在我们的讨论范围，感兴趣的可以查下相关资料。")])]),t._v(" "),a("p",[t._v("数组的一个特点就是"),a("strong",[t._v("支持随机访问")]),t._v("，请务必记住这一点。当你需要支持随机访问的数据结构的话， 自然而然应该想到数组。")]),t._v(" "),a("p",[t._v("本质上数组是一段连续的地址空间，这个是和我们之后要讲的链表的本质差别。 虽然二者从逻辑上来看都是线性的数据结构。")]),t._v(" "),a("ul",[a("li",[t._v("一个数组表示的是一系列的元素")]),t._v(" "),a("li",[t._v("数组（static array）的长度是固定的，一旦创建就不能改变（但是可以有 dynamic array）")]),t._v(" "),a("li",[t._v("所有的元素需要是同一类型（个别的语言除外）")]),t._v(" "),a("li",[t._v("可以通过下标索引获取到所储存的元素（随机访问）。 比如 array[index]")]),t._v(" "),a("li",[t._v("下标可以是是 0 到 array.length - 1 的任意整数")])]),t._v(" "),a("p",[t._v("当数组里的元素也是一个数组的时候，就可以形成多维数组。例子：")]),t._v(" "),a("ol",[a("li",[t._v("用一个多维数组表示坐标 "),a("code",[t._v("array[y]")])]),t._v(" "),a("li",[t._v("用一个多维数组来记录照片上每一个 pixel 的数值")])]),t._v(" "),a("p",[t._v("力扣中有很多二维数组的题目，我一般称其为 board。")]),t._v(" "),a("h2",{attrs:{id:"数组的常见操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组的常见操作"}},[t._v("#")]),t._v(" 数组的常见操作")]),t._v(" "),a("ol",[a("li",[t._v("随机访问，时间复杂度 O(1)")])]),t._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[t._v("arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("33")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1")]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 33")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("遍历，时间复杂度 O(N)")])]),t._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" nums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("任意位置插入元素、删除元素")])]),t._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[t._v("arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("33")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在索引2前插入一个5")]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("insert"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [1,2,5,33]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("我们不难发现， 插入 2 之后，新插入的元素之后的元素（最后一个元素）的索引发生了变化，从 2 变成了 3，而其前面的元素没有影响。从平均上来看，数组插入元素和删除元素的时间复杂度为"),a("code",[t._v("O(N)")]),t._v("。最好的情况删除和插入发生在尾部，时间复杂度为 "),a("code",[t._v("O(1)")]),t._v("。")]),t._v(" "),a("p",[t._v("基本上数组都支持这些方法。 虽然命名各有不同，但是都是上面四种操作的实现：")]),t._v(" "),a("ul",[a("li",[t._v("each()： 遍历数组")]),t._v(" "),a("li",[t._v("pop(index)：删除数组中索引为 index 的元素")]),t._v(" "),a("li",[t._v("insert(item, index)：数组索引为 index 处插入元素")])]),t._v(" "),a("p",[a("strong",[t._v("时间复杂度分析小结")])]),t._v(" "),a("ul",[a("li",[t._v("随机访问 -> O(1)")]),t._v(" "),a("li",[t._v("根据索引修改 -> O(1)")]),t._v(" "),a("li",[t._v("遍历数组 -> O(N)")]),t._v(" "),a("li",[t._v("插入数值到数组 -> O(N)")]),t._v(" "),a("li",[t._v("插入数值到数组最后 -> O(1)")]),t._v(" "),a("li",[t._v("从数组删除数值 -> O(N)")]),t._v(" "),a("li",[t._v("从数组最后删除数值 -> O(1)")])]),t._v(" "),a("h2",{attrs:{id:"基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),a("ul",[a("li",[t._v("数组交集")]),t._v(" "),a("li",[t._v("数组并集")]),t._v(" "),a("li",[t._v("数组合并")])]),t._v(" "),a("h2",{attrs:{id:"题目推荐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#题目推荐"}},[t._v("#")]),t._v(" 题目推荐")]),t._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"https://leetcode-cn.com/problems/insert-delete-getrandom-o1/",target:"_blank",rel:"noopener noreferrer"}},[t._v("380. 常数时间插入、删除和获取随机元素"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[a("router-link",{attrs:{to:"/91/leetcode/380.常数时间插入、删除和获取随机元素.html"}},[t._v("题解地址")])],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://leetcode-cn.com/problems/sort-colors/",target:"_blank",rel:"noopener noreferrer"}},[t._v("75. 颜色分类"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[a("router-link",{attrs:{to:"/91/leetcode/75.颜色分类.html"}},[t._v("题解地址")])],1)])])])])}),[],!1,null,null,null);s.default=r.exports}}]);