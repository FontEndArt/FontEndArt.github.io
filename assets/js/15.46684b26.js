(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{224:function(t,a,r){"use strict";r.r(a);var v=r(0),_=Object(v.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"常用算法和复杂度小记"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#常用算法和复杂度小记"}},[t._v("#")]),t._v(" 常用算法和复杂度小记")]),t._v(" "),r("h2",{attrs:{id:"常用算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#常用算法"}},[t._v("#")]),t._v(" 常用算法")]),t._v(" "),r("p",[t._v("常用的确定性算法")]),t._v(" "),r("ul",[r("li",[t._v("分治法(Divide and Conquer)")]),t._v(" "),r("li",[t._v("动态规划法(Dynamic Programming)")]),t._v(" "),r("li",[t._v("贪心法(Greedy)")]),t._v(" "),r("li",[t._v("回溯法(Backtracking)")]),t._v(" "),r("li",[t._v("分支界限法(Branch and Bound)")])]),t._v(" "),r("p",[t._v("还有其他的不确定的随机算法")]),t._v(" "),r("h2",{attrs:{id:"复杂度"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#复杂度"}},[t._v("#")]),t._v(" 复杂度")]),t._v(" "),r("p",[t._v("算法的复杂性取决于：")]),t._v(" "),r("ul",[r("li",[t._v("求解问题的规模")]),t._v(" "),r("li",[t._v("具体的输入数据")]),t._v(" "),r("li",[t._v("算法本身的设计")])])])}),[],!1,null,null,null);a.default=_.exports}}]);